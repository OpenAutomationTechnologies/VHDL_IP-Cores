###################################################################
##
## Name     : plb_powerlink
## Desc     : Microprocessor Peripheral Description
##          : Automatically generated by PsfUtility
##
###################################################################

BEGIN plb_powerlink

## Peripheral Options
OPTION IPTYPE = PERIPHERAL
OPTION IMP_NETLIST = TRUE
OPTION HDL = VHDL
OPTION IP_GROUP = MICROBLAZE:PPC:USER
OPTION DESC = PLB_POWERLINK
OPTION ARCH_SUPPORT_MAP = (others=DEVELOPMENT)


## Bus Interfaces
### openMAC DMA (optional)
BUS_INTERFACE BUS = MAC_DMA, BUS_STD = PLBV46, BUS_TYPE = MASTER, GENERATE_BURSTS = TRUE
### openMAC REG
BUS_INTERFACE BUS = MAC_REG, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = TRUE
### openMAC CMP
BUS_INTERFACE BUS = MAC_CMP, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = TRUE
### openMAC PKT (optional)
#BUS_INTERFACE BUS = MAC_PKT, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = FALSE
### PDI PCP (optional)
#BUS_INTERFACE BUS = PDI_PCP, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = FALSE
### PDI AP (optional)
#BUS_INTERFACE BUS = PDI_AP, BUS_STD = PLBV46, BUS_TYPE = SLAVE, ISVALID = FALSE

## Generics for VHDL
PARAMETER C_DUMMY = 0, DT = INTEGER, PERMIT = BASE_USER, DESC = "Dummy Parameter"
### openMAC DMA
PARAMETER C_MAC_DMA_PLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MAC_DMA, ASSIGNMENT = CONSTANT
PARAMETER C_MAC_DMA_PLB_AWIDTH = 32, DT = INTEGER, BUS = MAC_DMA, ASSIGNMENT = CONSTANT
PARAMETER C_MAC_DMA_PLB_DWIDTH = 32, DT = INTEGER, BUS = MAC_DMA, ASSIGNMENT = CONSTANT
### openMAC REG
PARAMETER C_MAC_REG_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = MAC_REG, ADDRESS = BASE, PAIR = C_MAC_REG_HIGHADDR, MIN_SIZE = 0x40, ASSIGNMENT = REQUIRE
PARAMETER C_MAC_REG_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = MAC_REG, ADDRESS = HIGH, PAIR = C_MAC_REG_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_MAC_REG_PLB_DWIDTH = 32, DT = INTEGER, BUS = MAC_REG, ASSIGNMENT = CONSTANT
PARAMETER C_MAC_REG_PLB_AWIDTH = 32, DT = INTEGER, BUS = MAC_REG, ASSIGNMENT = CONSTANT
PARAMETER C_MAC_REG_PLB_NUM_MASTERS = 1, DT = INTEGER, BUS = MAC_REG, ASSIGNMENT = CONSTANT
PARAMETER C_MAC_REG_PLB_MID_WIDTH = 1, DT = INTEGER, BUS = MAC_REG, ASSIGNMENT = CONSTANT
PARAMETER C_MAC_REG_PLB_P2P = 0, DT = INTEGER, BUS = MAC_REG, ASSIGNMENT = CONSTANT
PARAMETER C_MAC_REG_PLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MAC_REG, ASSIGNMENT = CONSTANT
PARAMETER C_MAC_REG_PLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = MAC_REG, ASSIGNMENT = CONSTANT
### openMAC CMP
PARAMETER C_MAC_CMP_BASEADDR = 0xffffffff, DT = std_logic_vector, BUS = MAC_CMP, ADDRESS = BASE, PAIR = C_MAC_CMP_HIGHADDR, MIN_SIZE = 0x40, ASSIGNMENT = REQUIRE
PARAMETER C_MAC_CMP_HIGHADDR = 0x00000000, DT = std_logic_vector, BUS = MAC_CMP, ADDRESS = HIGH, PAIR = C_MAC_CMP_BASEADDR, ASSIGNMENT = REQUIRE
PARAMETER C_MAC_CMP_PLB_DWIDTH = 32, DT = INTEGER, BUS = MAC_CMP, ASSIGNMENT = CONSTANT
PARAMETER C_MAC_CMP_PLB_AWIDTH = 32, DT = INTEGER, BUS = MAC_CMP, ASSIGNMENT = CONSTANT
PARAMETER C_MAC_CMP_PLB_NUM_MASTERS = 1, DT = INTEGER, BUS = MAC_CMP, ASSIGNMENT = CONSTANT
PARAMETER C_MAC_CMP_PLB_MID_WIDTH = 1, DT = INTEGER, BUS = MAC_CMP, ASSIGNMENT = CONSTANT
PARAMETER C_MAC_CMP_PLB_P2P = 0, DT = INTEGER, BUS = MAC_CMP, ASSIGNMENT = CONSTANT
PARAMETER C_MAC_CMP_PLB_NATIVE_DWIDTH = 32, DT = INTEGER, BUS = MAC_CMP, ASSIGNMENT = CONSTANT
PARAMETER C_MAC_CMP_PLB_SUPPORT_BURSTS = 0, DT = INTEGER, BUS = MAC_CMP, ASSIGNMENT = CONSTANT

## Ports
### PHY0
PORT phy0_SMIDat = "", DIR = INOUT, THREE_STATE = FALSE, IOB_STATE = BUF
PORT phy0_SMIClk = "", DIR = OUT
PORT phy0_Rst_n = "", DIR = OUT
PORT phy0_link = "", DIR = IN
#### MII
PORT phyMii0_RxClk = "", DIR = IN
PORT phyMii0_RxDat = "", DIR = IN, VEC = [3:0]
PORT phyMii0_RxDv = "", DIR = IN
PORT phyMii0_RxEr = "", DIR = IN
PORT phyMii0_TxClk = "", DIR = IN
PORT phyMii0_TxDat = "", DIR = OUT, VEC = [3:0]
PORT phyMii0_TxEn = "", DIR = OUT
PORT phyMii0_TxEr = "", DIR = OUT
#### RMII
PORT phy0_RxDat = "", DIR = IN, VEC = [1:0]
PORT phy0_RxDv = "", DIR = IN
PORT phy0_RxErr = "", DIR = IN
PORT phy0_TxDat = "", DIR = OUT, VEC = [1:0]
PORT phy0_TxEn = "", DIR = OUT

### PHY1
PORT phy1_SMIDat = "", DIR = INOUT, THREE_STATE = FALSE, IOB_STATE = BUF
PORT phy1_SMIClk = "", DIR = OUT
PORT phy1_Rst_n = "", DIR = OUT
PORT phy1_link = "", DIR = IN
#### MII
PORT phyMii1_RxClk = "", DIR = IN
PORT phyMii1_RxDat = "", DIR = IN, VEC = [3:0]
PORT phyMii1_RxDv = "", DIR = IN
PORT phyMii1_RxEr = "", DIR = IN
PORT phyMii1_TxClk = "", DIR = IN
PORT phyMii1_TxDat = "", DIR = OUT, VEC = [3:0]
PORT phyMii1_TxEn = "", DIR = OUT
PORT phyMii1_TxEr = "", DIR = OUT
#### RMII
PORT phy1_RxDat = "", DIR = IN, VEC = [1:0]
PORT phy1_RxDv = "", DIR = IN
PORT phy1_RxErr = "", DIR = IN
PORT phy1_TxDat = "", DIR = OUT, VEC = [1:0]
PORT phy1_TxEn = "", DIR = OUT

### Interrupts
PORT mac_irq = "", DIR = OUT, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT tcp_irq = "", DIR = OUT, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT ap_irq = "", DIR = OUT, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT ap_irq_n = "", DIR = OUT, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_LOW
PORT ap_asyncIrq = "", DIR = OUT, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_HIGH
PORT ap_asyncIrq_n = "", DIR = OUT, SIGIS = INTERRUPT, SENSITIVITY = LEVEL_LOW

### Portio
PORT pio_pconfig = "", DIR = IN, VEC = [3:0]
PORT pio_portinlatch = "", DIR = IN, VEC = [3:0]

### SPI
PORT spi_clk = "", DIR = IN
PORT spi_mosi = "", DIR = IN
PORT spi_sel_n = "", DIR = IN


### Parallel Interface
PORT pap_cs = "", DIR = IN
PORT pap_cs_n = "", DIR = IN
PORT pap_rd = "", DIR = IN
PORT pap_rd_n = "", DIR = IN
PORT pap_wr = "", DIR = IN
PORT pap_wr_n = "", DIR = IN
PORT pap_addr = "", DIR = IN, VEC = [15:0]
PORT pap_be = "", DIR = IN, VEC = [1:0]
PORT pap_be_n = "", DIR = IN, VEC = [1:0]

### openMAC DMA
PORT MAC_DMA_Clk = "", DIR = I, SIGIS = CLK, BUS = MAC_DMA
PORT MAC_DMA_Rst = MPLB_Rst, DIR = I, SIGIS = RST, BUS = MAC_DMA
#PORT MAC_DMA_error = "", DIR = O
PORT MAC_DMA_request = M_request, DIR = O, BUS = MAC_DMA
PORT MAC_DMA_priority = M_priority, DIR = O, VEC = [0:1], BUS = MAC_DMA
PORT MAC_DMA_busLock = M_busLock, DIR = O, BUS = MAC_DMA
PORT MAC_DMA_RNW = M_RNW, DIR = O, BUS = MAC_DMA
PORT MAC_DMA_BE = M_BE, DIR = O, VEC = [0:((C_MAC_DMA_PLB_DWIDTH/8)-1)], BUS = MAC_DMA
PORT MAC_DMA_MSize = M_MSize, DIR = O, VEC = [0:1], BUS = MAC_DMA
PORT MAC_DMA_size = M_size, DIR = O, VEC = [0:3], BUS = MAC_DMA
PORT MAC_DMA_type = M_type, DIR = O, VEC = [0:2], BUS = MAC_DMA
PORT MAC_DMA_TAttribute = M_TAttribute, DIR = O, VEC = [0:15], BUS = MAC_DMA
PORT MAC_DMA_lockErr = M_lockErr, DIR = O, BUS = MAC_DMA
PORT MAC_DMA_abort = M_abort, DIR = O, BUS = MAC_DMA
PORT MAC_DMA_UABus = M_UABus, DIR = O, VEC = [0:31], BUS = MAC_DMA
PORT MAC_DMA_ABus = M_ABus, DIR = O, VEC = [0:31], BUS = MAC_DMA
PORT MAC_DMA_wrDBus = M_wrDBus, DIR = O, VEC = [0:(C_MAC_DMA_PLB_DWIDTH-1)], BUS = MAC_DMA
PORT MAC_DMA_wrBurst = M_wrBurst, DIR = O, BUS = MAC_DMA
PORT MAC_DMA_rdBurst = M_rdBurst, DIR = O, BUS = MAC_DMA
PORT MAC_DMA_MAddrAck = PLB_MAddrAck, DIR = I, BUS = MAC_DMA
PORT MAC_DMA_MSSize = PLB_MSSize, DIR = I, VEC = [0:1], BUS = MAC_DMA
PORT MAC_DMA_MRearbitrate = PLB_MRearbitrate, DIR = I, BUS = MAC_DMA
PORT MAC_DMA_MTimeout = PLB_MTimeout, DIR = I, BUS = MAC_DMA
PORT MAC_DMA_MBusy = PLB_MBusy, DIR = I, BUS = MAC_DMA
PORT MAC_DMA_MRdErr = PLB_MRdErr, DIR = I, BUS = MAC_DMA
PORT MAC_DMA_MWrErr = PLB_MWrErr, DIR = I, BUS = MAC_DMA
PORT MAC_DMA_MIRQ = PLB_MIRQ, DIR = I, BUS = MAC_DMA
PORT MAC_DMA_MRdDBus = PLB_MRdDBus, DIR = I, VEC = [0:(C_MAC_DMA_PLB_DWIDTH-1)], BUS = MAC_DMA
PORT MAC_DMA_MRdWdAddr = PLB_MRdWdAddr, DIR = I, VEC = [0:3], BUS = MAC_DMA
PORT MAC_DMA_MRdDAck = PLB_MRdDAck, DIR = I, BUS = MAC_DMA
PORT MAC_DMA_MRdBTerm = PLB_MRdBTerm, DIR = I, BUS = MAC_DMA
PORT MAC_DMA_MWrDAck = PLB_MWrDAck, DIR = I, BUS = MAC_DMA
PORT MAC_DMA_MWrBTerm = PLB_MWrBTerm, DIR = I, BUS = MAC_DMA
### openMAC REG
PORT MAC_REG_Clk = "", DIR = I, SIGIS = CLK, BUS = MAC_REG
PORT MAC_REG_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = MAC_REG
PORT MAC_REG_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = MAC_REG
PORT MAC_REG_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = MAC_REG
PORT MAC_REG_PAValid = PLB_PAValid, DIR = I, BUS = MAC_REG
PORT MAC_REG_SAValid = PLB_SAValid, DIR = I, BUS = MAC_REG
PORT MAC_REG_rdPrim = PLB_rdPrim, DIR = I, BUS = MAC_REG
PORT MAC_REG_wrPrim = PLB_wrPrim, DIR = I, BUS = MAC_REG
PORT MAC_REG_masterID = PLB_masterID, DIR = I, VEC = [0:(C_MAC_REG_PLB_MID_WIDTH-1)], BUS = MAC_REG
PORT MAC_REG_abort = PLB_abort, DIR = I, BUS = MAC_REG
PORT MAC_REG_busLock = PLB_busLock, DIR = I, BUS = MAC_REG
PORT MAC_REG_RNW = PLB_RNW, DIR = I, BUS = MAC_REG
PORT MAC_REG_BE = PLB_BE, DIR = I, VEC = [0:((C_MAC_REG_PLB_DWIDTH/8)-1)], BUS = MAC_REG
PORT MAC_REG_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = MAC_REG
PORT MAC_REG_size = PLB_size, DIR = I, VEC = [0:3], BUS = MAC_REG
PORT MAC_REG_type = PLB_type, DIR = I, VEC = [0:2], BUS = MAC_REG
PORT MAC_REG_lockErr = PLB_lockErr, DIR = I, BUS = MAC_REG
PORT MAC_REG_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_MAC_REG_PLB_DWIDTH-1)], BUS = MAC_REG
PORT MAC_REG_wrBurst = PLB_wrBurst, DIR = I, BUS = MAC_REG
PORT MAC_REG_rdBurst = PLB_rdBurst, DIR = I, BUS = MAC_REG
PORT MAC_REG_wrPendReq = PLB_wrPendReq, DIR = I, BUS = MAC_REG
PORT MAC_REG_rdPendReq = PLB_rdPendReq, DIR = I, BUS = MAC_REG
PORT MAC_REG_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = MAC_REG
PORT MAC_REG_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = MAC_REG
PORT MAC_REG_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = MAC_REG
PORT MAC_REG_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = MAC_REG
PORT MAC_REG_addrAck = Sl_addrAck, DIR = O, BUS = MAC_REG
PORT MAC_REG_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = MAC_REG
PORT MAC_REG_wait = Sl_wait, DIR = O, BUS = MAC_REG
PORT MAC_REG_rearbitrate = Sl_rearbitrate, DIR = O, BUS = MAC_REG
PORT MAC_REG_wrDAck = Sl_wrDAck, DIR = O, BUS = MAC_REG
PORT MAC_REG_wrComp = Sl_wrComp, DIR = O, BUS = MAC_REG
PORT MAC_REG_wrBTerm = Sl_wrBTerm, DIR = O, BUS = MAC_REG
PORT MAC_REG_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_MAC_REG_PLB_DWIDTH-1)], BUS = MAC_REG
PORT MAC_REG_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = MAC_REG
PORT MAC_REG_rdDAck = Sl_rdDAck, DIR = O, BUS = MAC_REG
PORT MAC_REG_rdComp = Sl_rdComp, DIR = O, BUS = MAC_REG
PORT MAC_REG_rdBTerm = Sl_rdBTerm, DIR = O, BUS = MAC_REG
PORT MAC_REG_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_MAC_REG_PLB_NUM_MASTERS-1)], BUS = MAC_REG
PORT MAC_REG_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_MAC_REG_PLB_NUM_MASTERS-1)], BUS = MAC_REG
PORT MAC_REG_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_MAC_REG_PLB_NUM_MASTERS-1)], BUS = MAC_REG
PORT MAC_REG_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_MAC_REG_PLB_NUM_MASTERS-1)], BUS = MAC_REG
### openMAC CMP
PORT MAC_CMP_Clk = "", DIR = I, SIGIS = CLK, BUS = MAC_CMP
PORT MAC_CMP_Rst = SPLB_Rst, DIR = I, SIGIS = RST, BUS = MAC_CMP
PORT MAC_CMP_ABus = PLB_ABus, DIR = I, VEC = [0:31], BUS = MAC_CMP
PORT MAC_CMP_UABus = PLB_UABus, DIR = I, VEC = [0:31], BUS = MAC_CMP
PORT MAC_CMP_PAValid = PLB_PAValid, DIR = I, BUS = MAC_CMP
PORT MAC_CMP_SAValid = PLB_SAValid, DIR = I, BUS = MAC_CMP
PORT MAC_CMP_rdPrim = PLB_rdPrim, DIR = I, BUS = MAC_CMP
PORT MAC_CMP_wrPrim = PLB_wrPrim, DIR = I, BUS = MAC_CMP
PORT MAC_CMP_masterID = PLB_masterID, DIR = I, VEC = [0:(C_MAC_CMP_PLB_MID_WIDTH-1)], BUS = MAC_CMP
PORT MAC_CMP_abort = PLB_abort, DIR = I, BUS = MAC_CMP
PORT MAC_CMP_busLock = PLB_busLock, DIR = I, BUS = MAC_CMP
PORT MAC_CMP_RNW = PLB_RNW, DIR = I, BUS = MAC_CMP
PORT MAC_CMP_BE = PLB_BE, DIR = I, VEC = [0:((C_MAC_CMP_PLB_DWIDTH/8)-1)], BUS = MAC_CMP
PORT MAC_CMP_MSize = PLB_MSize, DIR = I, VEC = [0:1], BUS = MAC_CMP
PORT MAC_CMP_size = PLB_size, DIR = I, VEC = [0:3], BUS = MAC_CMP
PORT MAC_CMP_type = PLB_type, DIR = I, VEC = [0:2], BUS = MAC_CMP
PORT MAC_CMP_lockErr = PLB_lockErr, DIR = I, BUS = MAC_CMP
PORT MAC_CMP_wrDBus = PLB_wrDBus, DIR = I, VEC = [0:(C_MAC_CMP_PLB_DWIDTH-1)], BUS = MAC_CMP
PORT MAC_CMP_wrBurst = PLB_wrBurst, DIR = I, BUS = MAC_CMP
PORT MAC_CMP_rdBurst = PLB_rdBurst, DIR = I, BUS = MAC_CMP
PORT MAC_CMP_wrPendReq = PLB_wrPendReq, DIR = I, BUS = MAC_CMP
PORT MAC_CMP_rdPendReq = PLB_rdPendReq, DIR = I, BUS = MAC_CMP
PORT MAC_CMP_wrPendPri = PLB_wrPendPri, DIR = I, VEC = [0:1], BUS = MAC_CMP
PORT MAC_CMP_rdPendPri = PLB_rdPendPri, DIR = I, VEC = [0:1], BUS = MAC_CMP
PORT MAC_CMP_reqPri = PLB_reqPri, DIR = I, VEC = [0:1], BUS = MAC_CMP
PORT MAC_CMP_TAttribute = PLB_TAttribute, DIR = I, VEC = [0:15], BUS = MAC_CMP
PORT MAC_CMP_addrAck = Sl_addrAck, DIR = O, BUS = MAC_CMP
PORT MAC_CMP_SSize = Sl_SSize, DIR = O, VEC = [0:1], BUS = MAC_CMP
PORT MAC_CMP_wait = Sl_wait, DIR = O, BUS = MAC_CMP
PORT MAC_CMP_rearbitrate = Sl_rearbitrate, DIR = O, BUS = MAC_CMP
PORT MAC_CMP_wrDAck = Sl_wrDAck, DIR = O, BUS = MAC_CMP
PORT MAC_CMP_wrComp = Sl_wrComp, DIR = O, BUS = MAC_CMP
PORT MAC_CMP_wrBTerm = Sl_wrBTerm, DIR = O, BUS = MAC_CMP
PORT MAC_CMP_rdDBus = Sl_rdDBus, DIR = O, VEC = [0:(C_MAC_CMP_PLB_DWIDTH-1)], BUS = MAC_CMP
PORT MAC_CMP_rdWdAddr = Sl_rdWdAddr, DIR = O, VEC = [0:3], BUS = MAC_CMP
PORT MAC_CMP_rdDAck = Sl_rdDAck, DIR = O, BUS = MAC_CMP
PORT MAC_CMP_rdComp = Sl_rdComp, DIR = O, BUS = MAC_CMP
PORT MAC_CMP_rdBTerm = Sl_rdBTerm, DIR = O, BUS = MAC_CMP
PORT MAC_CMP_MBusy = Sl_MBusy, DIR = O, VEC = [0:(C_MAC_CMP_PLB_NUM_MASTERS-1)], BUS = MAC_CMP
PORT MAC_CMP_MWrErr = Sl_MWrErr, DIR = O, VEC = [0:(C_MAC_CMP_PLB_NUM_MASTERS-1)], BUS = MAC_CMP
PORT MAC_CMP_MRdErr = Sl_MRdErr, DIR = O, VEC = [0:(C_MAC_CMP_PLB_NUM_MASTERS-1)], BUS = MAC_CMP
PORT MAC_CMP_MIRQ = Sl_MIRQ, DIR = O, VEC = [0:(C_MAC_CMP_PLB_NUM_MASTERS-1)], BUS = MAC_CMP

END
